{"version":3,"sources":["redux/users-selectors.ts","utils/validators/validators.ts","components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.css","components/common/Battons/LoginButton/LoginButton.module.css","components/common/Battons/FollowButton/FollowButton.tsx","components/common/Battons/FollowButton/FollowButton.module.css","assets/preloaders/circle.svg","components/common/Battons/LoginButton/LoginButton.tsx","components/ProfilePage/ProfilePage.module.css","components/ProfilePage/Profileinfo/ProfileInfo.module.css","components/ProfilePage/Profileinfo/ProfileStatus/ProfileStatus.module.css","components/ProfilePage/Profileinfo/ProfileSettings/ProfileForm/ProfileForm.module.css","components/common/Battons/PrimaryButton/PrimaryButton.module.css","components/ProfilePage/Profileinfo/ProfileSettings/ProfileSettings.module.css","components/ProfilePage/Profileinfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/ProfilePage/Profileinfo/ProfileSettings/ProfileForm/ProfileForm.tsx","components/common/Battons/PrimaryButton/PrimaryButton.tsx","components/ProfilePage/Profileinfo/ProfileSettings/ProfileSettings.tsx","assets/icons/add_photo.svg","components/ProfilePage/Profileinfo/ProfileInfo.tsx","components/ProfilePage/ProfilePage.tsx"],"names":["getUsers","state","users","usersList","getTotalCount","totalCount","getUsersOnPageCount","usersOnPageCount","getCurrentPage","currentPage","getIsFetching","isFetching","getIsFollowingInProgress","isFollowingInProgress","getUsersFilter","usersFilter","required","value","undefined","email","test","loginInput","input","meta","props","hasError","touched","error","className","styles","loginInput__body","cn","loginInput__label","label","requiredLabel","requiredfield","htmlFor","id","loginInput__input","loginInput__error","loginCheckbox","loginCheckbox__body","loginCheckbox__block","loginCheckbox__checkbox","checkbox","loginCheckbox__label","profileInput","profileInput__body","profileInput__label","profileInput__input","profileInput__error","profileTextarea","profileTextarea__body","textarea","profileCheckbox","profileCheckbox__body","module","exports","FollowButton","userId","dispatch","useDispatch","followToggle","actionCreators","followToggleAC","isFollowingToggle","followingUserId","isFollowingToggleAC","currentUserInfo","useSelector","find","it","followButtonText","followed","followBtn","onClick","usersAPI","setUserUnfollow","then","data","resultCode","setUserFollow","disabled","indexOf","React","memo","LoginButton","isDisabled","text","submitButton","type","preloader","_active","src","btnPreloader","alt","ProfileStatusWithHooks","status","updateMyStatus","useEffect","setStatusText","useState","editMode","setEditMode","statusText","onDoubleClick","readOnly","autoFocus","onBlur","onChange","e","target","ProfileReduxForm","reduxForm","form","ContactsInputsGroup","name","placeholder","map","contact","Field","component","formWrapper","onSubmit","handleSubmit","mainRow","about","about__title","validate","contacts","contacts__title","bottomRow","profileForm__errorOnSubmit","profileForm__button","submitting","PrimaryButton","primaryButton","ProfileSettings","profileDetails","isOwner","updateProfile","ProfileMainDetails","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileMainDetailsList","Object","keys","item","index","profileDetails__item","profileDetails__itemTitle","profileDetails__itemValue","ProfileContacts","github","vk","facebook","instagram","twitter","youtube","website","mainLink","ProfileContactsList","profileSettings","profileSettings__wrapper","editButton","ReactDOM","createPortal","editProfileDetails","editProfileDetails__body","editProfileDetails__header","cross","profileData","initialValues","document","getElementById","ProfileInfo","userStatus","myStatus","savePhoto","profileInfoWrapper","profileInfo__item","mainInfo","imgContainer","photos","large","defaultUserImage","avatar","edidAvatarBlock","inputFileContainer","addPhotoIcon","title","photoIcon","files","length","fileData","fileInput","accept","status__title","status__text","ProfilePage","userProfileInfo","getUserProfileInfo","myProfileInfo","getMyProfileInfo","getUserStatus","getMyStatus","myId","getAuthId","isAuth","getIsAuth","useParams","numberedUserId","Number","profileInfo","setUserProfileThunk","setUserStatusThunk","setUserStatus","setMyStatusThunk","setMyStatus","profilePage","profilePage__item","updateMyStatusThunk","savePhotoThunk","updateProfileThunk","Preloader","replace","to"],"mappings":"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","file":"static/js/4.d55deb97.chunk.js","sourcesContent":["import {AppStateType} from './store-redux'\r\n\r\nexport const getUsers = (state: AppStateType) => state.users.usersList\r\nexport const getTotalCount = (state: AppStateType) => state.users.totalCount\r\nexport const getUsersOnPageCount = (state: AppStateType) => state.users.usersOnPageCount\r\nexport const getCurrentPage = (state: AppStateType) => state.users.currentPage\r\nexport const getIsFetching = (state: AppStateType) => state.users.isFetching\r\nexport const getIsFollowingInProgress = (state: AppStateType) => state.users.isFollowingInProgress\r\nexport const getUsersFilter = (state: AppStateType) => state.users.usersFilter\r\n","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = value => value ? undefined : 'Field is required'\r\n\r\nexport const maxLength = (nmb: number): FieldValidatorType => (value: string) => {\r\n  if (value && value.length > nmb) return `Max length is ${nmb} symbols`\r\n  return undefined\r\n}\r\n\r\nexport const email: FieldValidatorType = (value: string) => {\r\n  if (value && (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value))) {\r\n    return 'Invalid email address'\r\n  }\r\n  return undefined\r\n}\r\n","import React from 'react'\r\nimport { WrappedFieldProps } from 'redux-form'\r\n\r\nimport cn from 'classnames'\r\n\r\nimport styles from './FormsControls.module.css'\r\n\r\ntype ElementOwnPropsType = {\r\n  label?: string\r\n  id?: string\r\n  requiredfield?: 'true' | 'false'\r\n}\r\n\r\nexport const loginInput: React.FC<WrappedFieldProps & ElementOwnPropsType> = ({ input, meta, ...props }) => {\r\n  const hasError: boolean = meta.touched && meta.error\r\n  return (\r\n    <div className={styles.loginInput__body}>\r\n      <label className={cn(styles.loginInput__label, styles.label, { [styles.requiredLabel]: props.requiredfield })} htmlFor={props.id}>{props.label}</label>\r\n      <input {...input} {...props} className={cn(styles.loginInput__input, styles.input)} />\r\n      <div className={cn(styles.loginInput__error, styles.error)}>\r\n        {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const loginCheckbox: React.FC<WrappedFieldProps & ElementOwnPropsType> = ({ input, meta, ...props }) => {\r\n  return (\r\n    <div className={styles.loginCheckbox__body}>\r\n      <div className={styles.loginCheckbox__block}>\r\n        <input {...input} {...props} className={cn(styles.loginCheckbox__checkbox, styles.checkbox)} />\r\n        <label className={styles.loginCheckbox__label} htmlFor={props.id}>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const profileInput: React.FC<WrappedFieldProps & ElementOwnPropsType> = ({ input, meta, ...props }) => {\r\n  const hasError: boolean = meta.touched && meta.error\r\n  return (\r\n    <div className={styles.profileInput__body}>\r\n      <label className={cn(styles.profileInput__label, styles.label, { [styles.requiredLabel]: props.requiredfield })} htmlFor={props.id}>{props.label}</label>\r\n      <input {...input} {...props} className={cn(styles.profileInput__input, styles.input)} />\r\n      <div className={cn(styles.profileInput__error, styles.error)}>\r\n        {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const profileTextarea: React.FC<WrappedFieldProps & ElementOwnPropsType> = ({ input, meta, ...props }) => {\r\n  const hasError: boolean = meta.touched && meta.error\r\n  return (\r\n    <div className={styles.profileTextarea__body}>\r\n      <label className={cn(styles.profileInput__label, styles.label, { [styles.requiredLabel]: props.requiredfield })} htmlFor={props.id}>{props.label}</label>\r\n      {/* <input {...input} {...props} className={cn(styles.profileInput__input, styles.input)} /> */}\r\n      <textarea {...input} {...props} className={cn(styles.profileInput__input, styles.textarea)} />\r\n      <div className={cn(styles.profileInput__error, styles.error)}>\r\n        {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const profileCheckbox: React.FC<WrappedFieldProps & ElementOwnPropsType> = ({ input, meta, ...props }) => {\r\n  return (\r\n    <div className={styles.profileCheckbox__body}>\r\n      <div className={styles.loginCheckbox__block}>\r\n        <input {...input} {...props} className={cn(styles.loginCheckbox__checkbox, styles.checkbox)} />\r\n        <label className={styles.loginCheckbox__label} htmlFor={props.id}>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginInput__body\":\"FormsControls_loginInput__body__FShQI\",\"loginInput__label\":\"FormsControls_loginInput__label__3dy7E\",\"loginInput__input\":\"FormsControls_loginInput__input__1k9As\",\"loginInput__error\":\"FormsControls_loginInput__error__14nEk\",\"loginCheckbox__body\":\"FormsControls_loginCheckbox__body__1XifY\",\"profileInput__body\":\"FormsControls_profileInput__body__1imnC\",\"profileTextarea__body\":\"FormsControls_profileTextarea__body__1Amzu\",\"profileInput__label\":\"FormsControls_profileInput__label__2Mq0F\",\"label\":\"FormsControls_label__2kWq4\",\"requiredLabel\":\"FormsControls_requiredLabel__1-iWL\",\"profileInput__input\":\"FormsControls_profileInput__input__3hUpN\",\"input\":\"FormsControls_input__SLLxI\",\"textarea\":\"FormsControls_textarea__LnVmY\",\"profileInput__error\":\"FormsControls_profileInput__error__2EegU\",\"error\":\"FormsControls_error__3cVED\",\"profileCheckbox__body\":\"FormsControls_profileCheckbox__body__21CEm\",\"loginCheckbox__block\":\"FormsControls_loginCheckbox__block__1ZPo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitButton\":\"LoginButton_submitButton__qHXee\",\"preloader\":\"LoginButton_preloader__3BoQl\",\"_active\":\"LoginButton__active__CBs1J\"};","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getUsers, getIsFollowingInProgress } from '../../../../redux/users-selectors'\r\nimport { actionCreators } from '../../../../redux/users-reducer'\r\nimport { usersAPI } from '../../../../api/usersAPI'\r\n\r\nimport { UserInfoType } from '../../../../types/types'\r\n\r\nimport styles from './FollowButton.module.css'\r\n\r\ntype PropsType = {\r\n  userId: number | null\r\n}\r\n\r\nconst FollowButton: React.FC<PropsType> = ({ userId }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const followToggle: (userId: number | null) => void = (userId) => dispatch(actionCreators.followToggleAC(userId))\r\n  const isFollowingToggle: (followingUserId: number | null) => void = (followingUserId) => dispatch(actionCreators.isFollowingToggleAC(followingUserId))\r\n  const usersList = useSelector(getUsers)\r\n  const currentUserInfo: UserInfoType | undefined = usersList.find((it) => it.id === userId)\r\n  const isFollowingInProgress = useSelector(getIsFollowingInProgress)\r\n  let followButtonText = (currentUserInfo?.followed) ? 'UnFollow' : 'Follow'\r\n\r\n  const onFollowButtonClick = () => {\r\n    isFollowingToggle(userId)\r\n\r\n    if (currentUserInfo?.followed) {\r\n      usersAPI.setUserUnfollow(userId).then((data) => {\r\n        if (data.resultCode === 0) {\r\n          followToggle(userId)\r\n        }\r\n        isFollowingToggle(userId)\r\n      })\r\n\r\n    } else {\r\n      usersAPI.setUserFollow(userId).then((data) => {\r\n        if (data.resultCode === 0) {\r\n          followToggle(userId)\r\n        }\r\n        isFollowingToggle(userId)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={styles.followBtn}\r\n      onClick={onFollowButtonClick}\r\n      disabled={isFollowingInProgress.indexOf(userId) >= 0}\r\n    >\r\n      {followButtonText}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default React.memo(FollowButton)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followBtn\":\"FollowButton_followBtn__1mTbT\"};","export default __webpack_public_path__ + \"static/media/circle.f8e163e5.svg\";","import React from 'react'\r\nimport cn from 'classnames'\r\n\r\nimport styles from './LoginButton.module.css'\r\n\r\nimport btnPreloader from './../../../../assets/preloaders/circle.svg'\r\n\r\ntype PropsType = {\r\n  isDisabled: boolean\r\n  isFetching: boolean\r\n  text: string\r\n}\r\n\r\nconst LoginButton: React.FC<PropsType> = ({ isDisabled, isFetching, text }) => {\r\n  return (\r\n    <button className={styles.submitButton} type=\"submit\" disabled={isDisabled || isFetching}>\r\n      <img className={cn(styles.preloader, { [styles._active]: isFetching })} src={btnPreloader} alt=\"\" />\r\n      <span>{text}</span>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default React.memo(LoginButton)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfilePage_profilePage__1tgML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__3QO2L\",\"profileInfo__item\":\"ProfileInfo_profileInfo__item__3tinI\",\"imgContainer\":\"ProfileInfo_imgContainer__3amtg\",\"avatar\":\"ProfileInfo_avatar__332Ba\",\"edidAvatarBlock\":\"ProfileInfo_edidAvatarBlock__1z-FR\",\"photoIcon\":\"ProfileInfo_photoIcon__2lNby\",\"fileInput\":\"ProfileInfo_fileInput__-KCgP\",\"fullName\":\"ProfileInfo_fullName__10vxs\",\"status__title\":\"ProfileInfo_status__title__2VMz_\",\"mainInfo\":\"ProfileInfo_mainInfo__3yPDQ\",\"aboutMe\":\"ProfileInfo_aboutMe__23Xo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"ProfileStatus_textarea__2TOhS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ProfileForm_formWrapper__2twvg\",\"mainRow\":\"ProfileForm_mainRow__3XMfg\",\"about\":\"ProfileForm_about__3A5hd\",\"contacts\":\"ProfileForm_contacts__3CEPK\",\"about__title\":\"ProfileForm_about__title__2uup7\",\"contacts__title\":\"ProfileForm_contacts__title__2Uvek\",\"bottomRow\":\"ProfileForm_bottomRow__1sTe3\",\"profileForm__errorOnSubmit\":\"ProfileForm_profileForm__errorOnSubmit__kaCVV\",\"profileForm__button\":\"ProfileForm_profileForm__button__3bNMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"PrimaryButton_primaryButton__1Zsns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileSettings\":\"ProfileSettings_profileSettings__3FAbJ\",\"about__title\":\"ProfileSettings_about__title__1QS2H\",\"contacts__title\":\"ProfileSettings_contacts__title__34NyG\",\"profileDetails__item\":\"ProfileSettings_profileDetails__item__3EKB-\",\"profileDetails__itemTitle\":\"ProfileSettings_profileDetails__itemTitle__2U25-\",\"profileDetails__itemValue\":\"ProfileSettings_profileDetails__itemValue__646bt\",\"editButton\":\"ProfileSettings_editButton__Uceo9\",\"editProfileDetails\":\"ProfileSettings_editProfileDetails__2shKS\",\"editProfileDetails__body\":\"ProfileSettings_editProfileDetails__body__rCLMB\",\"editProfileDetails__header\":\"ProfileSettings_editProfileDetails__header__3eeXr\",\"cross\":\"ProfileSettings_cross__3Oxi6\"};","import React, { useState, useEffect, ChangeEvent } from 'react'\r\n\r\nimport cn from 'classnames'\r\n\r\nimport styles from './ProfileStatus.module.css'\r\n\r\ntype PropsType = {\r\n  status: string\r\n  updateMyStatus: (myStatus: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<PropsType> = ({ status, updateMyStatus }) => {\r\n\r\n  useEffect((\r\n    () => {\r\n      setStatusText(status)\r\n    }\r\n  ), [status])\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [statusText, setStatusText] = useState(status)\r\n\r\n  const onChangeStatus = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setStatusText(e.target.value)\r\n  }\r\n\r\n  const updateStatus = () => {\r\n    if (statusText !== status) {\r\n      updateMyStatus(statusText)\r\n    }\r\n    setEditMode(false)\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={styles.status}>\r\n      {!editMode &&\r\n        <div>\r\n          <textarea\r\n            onDoubleClick={() => setEditMode(true)}\r\n            value={statusText || 'No status'}\r\n            className={cn(styles.textarea)}\r\n            readOnly\r\n          />\r\n        </div>\r\n      }\r\n\r\n      {editMode &&\r\n        <div>\r\n          <textarea\r\n            autoFocus={true}\r\n            onBlur={updateStatus}\r\n            value={statusText}\r\n            onChange={onChangeStatus}\r\n            className={styles.textarea}\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport { Field, reduxForm, InjectedFormProps } from 'redux-form'\r\n\r\nimport styles from './ProfileForm.module.css'\r\nimport { ProfileType } from '../../../../../types/types'\r\nimport { required } from '../../../../../utils/validators/validators'\r\nimport { profileInput, profileCheckbox, profileTextarea } from '../../../../common/FormsControls/FormsControls'\r\n\r\nimport LoginButton from '../../../../common/Battons/LoginButton/LoginButton'\r\n\r\ntype ProfileFormValuesType = ProfileType\r\n\r\ntype ProfileFormOwnPropsType = {\r\n  initialValues: ProfileType\r\n  profileDetails: ProfileType\r\n  isFetching: boolean\r\n}\r\n\r\nconst ProfileForm: React.FC<InjectedFormProps<ProfileFormValuesType,\r\n  ProfileFormOwnPropsType> & ProfileFormOwnPropsType> = (props) => {\r\n\r\n    const ProfileContacts = [\r\n      {\r\n        name: 'github',\r\n        placeholder: 'Github',\r\n        label: 'Github',\r\n        id: 'profileForm-github'\r\n      },\r\n      {\r\n        name: 'vk',\r\n        placeholder: 'VK',\r\n        label: 'VK',\r\n        id: 'profileForm-vk'\r\n      },\r\n      {\r\n        name: 'facebook',\r\n        placeholder: 'Facebook',\r\n        label: 'Facebook',\r\n        id: 'profileForm-facebook'\r\n      },\r\n      {\r\n        name: 'instagram',\r\n        placeholder: 'Instagram',\r\n        label: 'Instagram',\r\n        id: 'profileForm-instagram'\r\n      },\r\n      {\r\n        name: 'twitter',\r\n        placeholder: 'Twitter',\r\n        label: 'Twitter',\r\n        id: 'profileForm-twitter'\r\n      },\r\n      {\r\n        name: 'youtube',\r\n        placeholder: 'Youtube',\r\n        label: 'Youtube',\r\n        id: 'profileForm-youtube'\r\n      },\r\n      {\r\n        name: 'website',\r\n        placeholder: 'Website',\r\n        label: 'Website',\r\n        id: 'profileForm-website'\r\n      },\r\n      {\r\n        name: 'mainLink',\r\n        placeholder: 'Main link',\r\n        label: 'Main link',\r\n        id: 'profileForm-mainLink'\r\n      }\r\n    ]\r\n\r\n    const ContactsInputsGroup = ProfileContacts.map((contact) => {\r\n      return (\r\n        <div key={contact.name}>\r\n          <Field\r\n            name={`contacts.${contact.name}`}\r\n            component={profileInput}\r\n            type='text'\r\n            placeholder={contact.placeholder}\r\n            label={contact.label}\r\n            id={contact.id}\r\n          />\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n\r\n      <div className={styles.formWrapper}>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n          <div className={styles.mainRow}>\r\n\r\n            <div className={styles.about}>\r\n              <h3 className={styles.about__title}>Profile settings</h3>\r\n\r\n              <Field\r\n                name='fullName'\r\n                type='text'\r\n                component={profileInput}\r\n                placeholder='Full Name'\r\n                validate={[required]}\r\n                label='Full Name'\r\n                id='profileForm-fullName'\r\n                requiredfield=\"true\"\r\n              />\r\n\r\n              <Field\r\n                name='aboutMe'\r\n                type='text'\r\n                component={profileTextarea}\r\n                placeholder='About me'\r\n                validate={[required]}\r\n                label='About me'\r\n                id='profileForm-aboutMe'\r\n                requiredfield=\"true\"\r\n              />\r\n\r\n              <Field\r\n                name='lookingForAJob'\r\n                type='checkbox'\r\n                component={profileCheckbox}\r\n                label='Looking for a job'\r\n                id='profileForm-lookingForAJob'\r\n              />\r\n\r\n              <Field\r\n                name={'lookingForAJobDescription'}\r\n                type='text'\r\n                component={profileTextarea}\r\n                placeholder={'Job description'}\r\n                validate={[required]}\r\n                label='Job description'\r\n                id='profileForm-jobDescription'\r\n                requiredfield=\"true\"\r\n              />\r\n\r\n            </div>\r\n\r\n            <div className={styles.contacts}>\r\n              <h3 className={styles.contacts__title}>Contacts</h3>\r\n              {ContactsInputsGroup}\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className={styles.bottomRow}>\r\n\r\n            {props.error &&\r\n              <div className={styles.profileForm__errorOnSubmit}>\r\n                {props.error}\r\n              </div>\r\n            }\r\n\r\n            <div className={styles.profileForm__button}>\r\n              <LoginButton isDisabled={props.submitting} isFetching={props.isFetching} text=\"Save\" />\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\nconst ProfileReduxForm = reduxForm<ProfileFormValuesType, ProfileFormOwnPropsType>({ form: 'profile' })(ProfileForm)\r\n\r\nexport default ProfileReduxForm","import React from 'react'\r\n\r\nimport styles from './PrimaryButton.module.css'\r\n\r\ntype PropsType = {\r\n  text: string\r\n  onClick: () => void\r\n}\r\n\r\nconst PrimaryButton: React.FC<PropsType> = ({ text, onClick }) => {\r\n  return (\r\n\r\n    <button className={styles.primaryButton} onClick={onClick}>\r\n      <span>{text}</span>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default React.memo(PrimaryButton)","import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { ProfileType } from '../../../../types/types'\r\nimport ProfileReduxForm from './ProfileForm/ProfileForm'\r\nimport PrimaryButton from '../../../common/Battons/PrimaryButton/PrimaryButton'\r\n\r\nimport styles from './ProfileSettings.module.css'\r\nimport FollowButton from '../../../common/Battons/FollowButton/FollowButton'\r\n\r\ntype PropsType = {\r\n  profileDetails: ProfileType\r\n  isOwner: boolean\r\n  userId: number | null\r\n  updateProfile: (profileData: ProfileType) => Promise<any>\r\n  isFetching: boolean\r\n}\r\n\r\nconst ProfileSettings: React.FC<PropsType> = ({ profileDetails, isOwner, userId, updateProfile, isFetching }) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const onEnableEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const onDisableEditMode = () => {\r\n    setEditMode(false)\r\n  }\r\n\r\n  // todo remove then later\r\n  const onSubmitProfileReduxForm = (profileData: ProfileType) => {\r\n    updateProfile(profileData)\r\n      .then(() => { setEditMode(false) })\r\n  }\r\n\r\n  const ProfileMainDetails = {\r\n    fullName: 'Full Name:',\r\n    aboutMe: 'About:',\r\n    lookingForAJob: 'Looking for a job:',\r\n    lookingForAJobDescription: 'Job description:'\r\n  }\r\n\r\n  type ProfileMainDetailsType = typeof ProfileMainDetails\r\n\r\n  const ProfileMainDetailsList = Object.keys(ProfileMainDetails).map((item, index) => {\r\n    return (\r\n      <div key={index} className={styles.profileDetails__item}>\r\n\r\n        <div className={styles.profileDetails__itemTitle}>\r\n          {ProfileMainDetails[item as keyof ProfileMainDetailsType]}\r\n        </div>\r\n\r\n        {(typeof profileDetails[item as keyof ProfileMainDetailsType] !== 'boolean')\r\n          ? <div className={styles.profileDetails__itemValue}>\r\n            {profileDetails[item as keyof ProfileMainDetailsType] || '----------'}\r\n          </div>\r\n          : <div className={styles.profileDetails__itemValue}>\r\n            {profileDetails[item as keyof ProfileMainDetailsType] ? 'Yes' : 'No'}\r\n          </div>}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const ProfileContacts = {\r\n    github: 'Github:',\r\n    vk: 'VK:',\r\n    facebook: 'Facebook:',\r\n    instagram: 'Instagram:',\r\n    twitter: 'Twitter:',\r\n    youtube: 'Youtube:',\r\n    website: 'Website:',\r\n    mainLink: 'Main link:'\r\n  }\r\n\r\n  type ProfileContactsType = typeof ProfileContacts\r\n\r\n  const ProfileContactsList = Object.keys(ProfileContacts).map((item, index) => {\r\n    return (\r\n      <div key={index} className={styles.profileDetails__item}>\r\n\r\n        <div className={styles.profileDetails__itemTitle}>\r\n          {ProfileContacts[item as keyof ProfileContactsType]}\r\n        </div>\r\n\r\n        <div className={styles.profileDetails__itemValue}>\r\n          {profileDetails.contacts[item as keyof ProfileContactsType] || '----------'}\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={styles.profileSettings}>\r\n\r\n      {!editMode && (\r\n        <div className={styles.profileSettings__wrapper}>\r\n\r\n          <section className={styles.about}>\r\n            <h3 className={styles.about__title}>Profile settings</h3>\r\n            {ProfileMainDetailsList}\r\n          </section>\r\n\r\n          <section className={styles.contacts}>\r\n            <h3 className={styles.contacts__title}>Contacts</h3>\r\n            {ProfileContactsList}\r\n          </section>\r\n\r\n          <div className={styles.editButton}>\r\n            {isOwner && <PrimaryButton\r\n              text='Edit'\r\n              onClick={onEnableEditMode}\r\n            />}\r\n            {!isOwner && <FollowButton\r\n              userId={userId}\r\n            />}\r\n          </div>\r\n\r\n        </div>\r\n      )}\r\n\r\n\r\n      {editMode && ReactDOM.createPortal(\r\n        (\r\n          <div className={styles.editProfileDetails}>\r\n\r\n            <div className={styles.editProfileDetails__body}>\r\n\r\n              <div className={styles.editProfileDetails__header}>\r\n                <button onClick={onDisableEditMode}>\r\n                  <div className={styles.cross}></div>\r\n                </button>\r\n              </div>\r\n\r\n              <ProfileReduxForm\r\n                onSubmit={onSubmitProfileReduxForm}\r\n                initialValues={profileDetails}\r\n                profileDetails={profileDetails}\r\n                isFetching={isFetching}\r\n              />\r\n\r\n            </div>\r\n\r\n          </div>\r\n        ),\r\n        document.getElementById('root') as Element | DocumentFragment\r\n      )\r\n\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(ProfileSettings)\r\n","export default __webpack_public_path__ + \"static/media/add_photo.af5eb5f9.svg\";","import React, { ChangeEvent } from 'react'\r\nimport cn from 'classnames'\r\n\r\nimport styles from './ProfileInfo.module.css'\r\nimport defaultUserImage from '../../../assets/images/defaultUserImage.jpg'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatusWithHooks'\r\nimport ProfileSettings from './ProfileSettings/ProfileSettings'\r\nimport { ProfileType } from '../../../types/types'\r\n\r\nimport addPhotoIcon from './../../../assets/icons/add_photo.svg'\r\n\r\ntype PropsType = {\r\n  isOwner: boolean\r\n  userId: number | null\r\n  userStatus: string\r\n  myStatus: string\r\n  updateMyStatus: (myStatus: string) => void\r\n  savePhoto: (file: File) => void\r\n  updateProfile: (profileData: ProfileType) => any\r\n  profileDetails: ProfileType\r\n  isFetching: boolean\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({ isOwner, userId, userStatus, myStatus, updateMyStatus, savePhoto, updateProfile, profileDetails, isFetching }) => {\r\n  const onFileSelect = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      const fileData = e.target.files[0]\r\n      savePhoto(fileData)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.profileInfoWrapper}>\r\n\r\n      <div className={cn(styles.profileInfo__item, styles.mainInfo)}>\r\n        <div className={styles.imgContainer}>\r\n          <img src={profileDetails.photos.large ? profileDetails.photos.large : defaultUserImage}\r\n            alt=\"userAvatar\"\r\n            className={styles.avatar}\r\n          />\r\n\r\n          {/* Всплывающий блок с кнопкой изменения автара */}\r\n          {isOwner && (\r\n            <div className={styles.edidAvatarBlock}>\r\n              <div className={styles.inputFileContainer}>\r\n                <label htmlFor=\"avatarFileInput\">\r\n                  <img src={addPhotoIcon} alt=\"\" title='Select' className={styles.photoIcon} />\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={onFileSelect}\r\n                  id=\"avatarFileInput\"\r\n                  className={styles.fileInput}\r\n                  accept=\"image/*\"\r\n                />\r\n              </div>\r\n              {/* Эндпоинт удаления аватара не предусмотрен АПИ */}\r\n              {/* <button>\r\n                <img src={removePhotoIcon} alt=\"\" title='Delete' className={styles.photoIcon} />\r\n              </button> */}\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n\r\n        <div className={styles.fullName}>\r\n          <h2>{profileDetails.fullName}</h2>\r\n        </div>\r\n\r\n        <div className={styles.status}>\r\n          <div className={styles.status__title}>Status:</div>\r\n          <div className={styles.status__text}>\r\n            {!isOwner && (<>{userStatus || 'User have no status!'}</>)}\r\n            {isOwner && (<ProfileStatus status={myStatus} updateMyStatus={updateMyStatus} />)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className={cn(styles.profileInfo__item, styles.aboutMe)}>\r\n        <ProfileSettings\r\n          profileDetails={profileDetails}\r\n          isOwner={isOwner}\r\n          userId={userId}\r\n          updateProfile={updateProfile}\r\n          isFetching={isFetching}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(ProfileInfo)\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams, Navigate } from 'react-router-dom'\r\n\r\nimport {\r\n  setUserProfileThunk, setUserStatusThunk, setMyStatusThunk,\r\n  updateMyStatusThunk, savePhotoThunk, updateProfileThunk\r\n} from '../../redux/profile-reducer'\r\n\r\nimport styles from './ProfilePage.module.css'\r\n\r\nimport ProfileInfo from './Profileinfo/ProfileInfo'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { ProfileType } from '../../types/types'\r\nimport { getMyStatus, getUserProfileInfo, getMyProfileInfo, getUserStatus, getIsFetching } from '../../redux/profile-selectors'\r\nimport { getAuthId, getIsAuth } from '../../redux/auth-selectors'\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userProfileInfo = useSelector(getUserProfileInfo)\r\n  const myProfileInfo = useSelector(getMyProfileInfo)\r\n  const userStatus = useSelector(getUserStatus)\r\n  const myStatus = useSelector(getMyStatus)\r\n  const myId = useSelector(getAuthId)\r\n  const isAuth = useSelector(getIsAuth)\r\n  const isFetching = useSelector(getIsFetching)\r\n\r\n  const setUserProfile = (id: number) => dispatch(setUserProfileThunk(id))\r\n  const setUserStatus = (id: number) => dispatch(setUserStatusThunk(id))\r\n  const setMyStatus = (myId: number) => dispatch(setMyStatusThunk(myId))\r\n  const updateMyStatus = (myStatus: string) => dispatch(updateMyStatusThunk(myStatus))\r\n  const savePhoto = (fileData: File) => dispatch(savePhotoThunk(fileData))\r\n  const updateProfile = (profileData: ProfileType) => dispatch(updateProfileThunk(profileData))\r\n\r\n  const { userId } = useParams<{ userId?: string }>()\r\n  const numberedUserId = Number(userId)\r\n\r\n  const isOwner: boolean = (myId === numberedUserId)\r\n  const profileInfo = isOwner ? myProfileInfo : userProfileInfo\r\n\r\n  // componentDidMount() {\r\n  //   const paramsUserId = this.props.match.params.userId\r\n  //   const userId = (paramsUserId) ? paramsUserId : this.props.myId\r\n\r\n  //   this.props.setUserProfileThunk(userId as number)\r\n  //   this.props.setUserStatusThunk(userId as number)\r\n  //   this.props.setMyStatusThunk(this.props.myId as number)\r\n  // }\r\n\r\n  useEffect(\r\n    () => {\r\n      if (isAuth && numberedUserId) {\r\n        setUserProfile(numberedUserId)\r\n        setUserStatus(numberedUserId)\r\n        setMyStatus(myId as number)\r\n      }\r\n\r\n      // eslint-disable-next-line\r\n    }, [isAuth, userId]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {!isAuth\r\n        ? <Navigate replace to='/login' />\r\n        :\r\n        <div className={styles.profilePage}>\r\n\r\n          <div className={styles.profilePage__item}>\r\n            {profileInfo\r\n              ? <ProfileInfo\r\n                isOwner={isOwner}\r\n                userId={numberedUserId}\r\n                profileDetails={profileInfo}\r\n                userStatus={userStatus}\r\n                myStatus={myStatus}\r\n                updateMyStatus={updateMyStatus}\r\n                savePhoto={savePhoto}\r\n                updateProfile={updateProfile}\r\n                isFetching={isFetching}\r\n              />\r\n              : <Preloader />}\r\n          </div>\r\n\r\n          {/* <div className={styles.profilePage__item}>\r\n            {isOwner && <MyPosts />}\r\n          </div> */}\r\n\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(ProfilePage)\r\n"],"sourceRoot":""}
{"version":3,"sources":["redux/users-selectors.ts","components/common/Battons/FollowButton/FollowButton.tsx","components/common/Battons/FollowButton/FollowButton.module.css","components/UsersPage/User/User.module.css","components/UsersPage/Users.module.css","components/common/Pagination/Pagination.module.css","components/UsersPage/UsersSearchForm/UsersSearchForm.module.css","components/UsersPage/User/User.tsx","components/common/Pagination/Pagination.tsx","components/UsersPage/UsersSearchForm/UsersSearchForm.tsx","components/UsersPage/UsersPage.tsx"],"names":["getUsers","state","users","usersList","getTotalCount","totalCount","getUsersOnPageCount","usersOnPageCount","getCurrentPage","currentPage","getIsFetching","isFetching","getIsFollowingInProgress","isFollowingInProgress","getUsersFilter","usersFilter","FollowButton","userId","dispatch","useDispatch","followToggle","actionCreators","followToggleAC","isFollowingToggle","followingUserId","isFollowingToggleAC","currentUserInfo","useSelector","find","it","id","followButtonText","followed","className","styles","followBtn","onClick","usersAPI","setUserUnfollow","then","data","resultCode","setUserFollow","disabled","indexOf","React","memo","module","exports","User","props","userInfo","userProfileUrl","userCard","userAvatar","to","src","photos","small","userImage","alt","about","cn","about__item","name","status","status__title","status__text","btnBlock","Pagination","pageSize","onPageNumberClick","portionSize","pageNumbersArr","pagesCount","Math","ceil","i","push","portionCount","startPortionNumber","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","wrapper","paginationBody","prevBtn","btn","prevBtn_disabled","prevBtn_normal","filter","page","map","activePage","pages","e","nextBtn","nextBtn_disabled","nextBtn_normal","UsersSearchForm","onChangeUsersFilter","initialFormValues","term","friend","enableReinitialize","initialValues","validate","values","onSubmit","setSubmitting","isSubmitting","form","type","input","component","error","as","select","value","option","UsersPage","location","useLocation","navigate","useNavigate","setUsersFilter","setUsersFilterAC","setCurrentPage","setCurrentPageAC","requestUsers","requestUsersThunk","usersListItems","user","useEffect","queryParams","URLSearchParams","search","actualPage","actualFilter","has","Number","get","set","String","pathname","toString","Preloader","pagination","pageNumber"],"mappings":"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","file":"static/js/5.89333ad1.chunk.js","sourcesContent":["import {AppStateType} from './store-redux'\r\n\r\nexport const getUsers = (state: AppStateType) => state.users.usersList\r\nexport const getTotalCount = (state: AppStateType) => state.users.totalCount\r\nexport const getUsersOnPageCount = (state: AppStateType) => state.users.usersOnPageCount\r\nexport const getCurrentPage = (state: AppStateType) => state.users.currentPage\r\nexport const getIsFetching = (state: AppStateType) => state.users.isFetching\r\nexport const getIsFollowingInProgress = (state: AppStateType) => state.users.isFollowingInProgress\r\nexport const getUsersFilter = (state: AppStateType) => state.users.usersFilter\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getUsers, getIsFollowingInProgress } from '../../../../redux/users-selectors'\r\nimport { actionCreators } from '../../../../redux/users-reducer'\r\nimport { usersAPI } from '../../../../api/usersAPI'\r\n\r\nimport { UserInfoType } from '../../../../types/types'\r\n\r\nimport styles from './FollowButton.module.css'\r\n\r\ntype PropsType = {\r\n  userId: number | null\r\n}\r\n\r\nconst FollowButton: React.FC<PropsType> = ({ userId }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const followToggle: (userId: number | null) => void = (userId) => dispatch(actionCreators.followToggleAC(userId))\r\n  const isFollowingToggle: (followingUserId: number | null) => void = (followingUserId) => dispatch(actionCreators.isFollowingToggleAC(followingUserId))\r\n  const usersList = useSelector(getUsers)\r\n  const currentUserInfo: UserInfoType | undefined = usersList.find((it) => it.id === userId)\r\n  const isFollowingInProgress = useSelector(getIsFollowingInProgress)\r\n  let followButtonText = (currentUserInfo?.followed) ? 'UnFollow' : 'Follow'\r\n\r\n  const onFollowButtonClick = () => {\r\n    isFollowingToggle(userId)\r\n\r\n    if (currentUserInfo?.followed) {\r\n      usersAPI.setUserUnfollow(userId).then((data) => {\r\n        if (data.resultCode === 0) {\r\n          followToggle(userId)\r\n        }\r\n        isFollowingToggle(userId)\r\n      })\r\n\r\n    } else {\r\n      usersAPI.setUserFollow(userId).then((data) => {\r\n        if (data.resultCode === 0) {\r\n          followToggle(userId)\r\n        }\r\n        isFollowingToggle(userId)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={styles.followBtn}\r\n      onClick={onFollowButtonClick}\r\n      disabled={isFollowingInProgress.indexOf(userId) >= 0}\r\n    >\r\n      {followButtonText}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default React.memo(FollowButton)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followBtn\":\"FollowButton_followBtn__1mTbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"User_userCard__23XjB\",\"userAvatar\":\"User_userAvatar__1y0nX\",\"name\":\"User_name__2ol9d\",\"status\":\"User_status__2NXPO\",\"status__title\":\"User_status__title__2Yj77\",\"status__text\":\"User_status__text__2TkyR\",\"btnBlock\":\"User_btnBlock__34O4n\",\"followBtn\":\"User_followBtn__3We4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__2nSJq\",\"pagination\":\"Users_pagination__2Bug_\",\"usersList\":\"Users_usersList__5RBaq\",\"form\":\"Users_form__2eAPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBody\":\"Pagination_paginationBody__-V-hn\",\"prevBtn\":\"Pagination_prevBtn__7rOfb\",\"nextBtn\":\"Pagination_nextBtn__1L8n1\",\"btn\":\"Pagination_btn__2mBPz\",\"prevBtn_disabled\":\"Pagination_prevBtn_disabled__5oDUj\",\"nextBtn_disabled\":\"Pagination_nextBtn_disabled__2aBcI\",\"prevBtn_normal\":\"Pagination_prevBtn_normal__2_GGE\",\"nextBtn_normal\":\"Pagination_nextBtn_normal__VpoqJ\",\"activePage\":\"Pagination_activePage__-Jdyd\",\"pages\":\"Pagination_pages__TuryD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UsersSearchForm_wrapper__2suVJ\",\"form\":\"UsersSearchForm_form__2ZX6d\",\"input\":\"UsersSearchForm_input__1_GWX\",\"select\":\"UsersSearchForm_select__17jQI\",\"btn\":\"UsersSearchForm_btn__3EK69\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport cn from 'classnames'\r\n\r\nimport styles from './User.module.css'\r\nimport userImage from '../../../assets/images/defaultUserImage.jpg'\r\nimport { UserInfoType } from '../../../types/types'\r\nimport FollowButton from '../../common/Battons/FollowButton/FollowButton'\r\n\r\ntype PropsType = {\r\n  userInfo: UserInfoType\r\n  followToggle: (userId: number | null) => void\r\n  isFollowingToggle: (followingUserId: number | null) => void\r\n  isFollowingInProgress: Array<number | null>\r\n}\r\n\r\nconst User: React.FC<PropsType> = (props) => {\r\n\r\n  const userId = props.userInfo.id\r\n  const userProfileUrl = `/profile/${userId}`\r\n\r\n  return (\r\n    <div className={styles.userCard}>\r\n\r\n      <div className={styles.userAvatar}>\r\n        <NavLink to={userProfileUrl}>\r\n          <img src={props.userInfo.photos.small ? props.userInfo.photos.small : userImage} alt=\"avatar\" />\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className={styles.about}>\r\n        <div className={cn(styles.about__item, styles.name)}>\r\n          {props.userInfo.name}\r\n        </div>\r\n        <div className={cn(styles.about__item, styles.status)}>\r\n          <span className={styles.status__title}>Status:</span>\r\n          <div className={styles.status__text}>\r\n            {props.userInfo.status ? props.userInfo.status : '------'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.btnBlock}>\r\n        <FollowButton\r\n          userId={userId}\r\n        />\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import React, { useState } from 'react'\r\nimport cn from 'classnames'\r\n\r\nimport styles from './Pagination.module.css'\r\n\r\ntype PropsType = {\r\n  totalCount: number,\r\n  pageSize: number,\r\n  currentPage: number,\r\n  onPageNumberClick: (page: number) => void,\r\n  portionSize?: number\r\n}\r\n\r\nconst Pagination: React.FC<PropsType> = ({ totalCount, pageSize = 5, currentPage, onPageNumberClick, portionSize = 10 }) => {\r\n  const pageNumbersArr: Array<number> = []\r\n  const pagesCount = Math.ceil(totalCount / pageSize)\r\n  // const pagesCount = Math.ceil(128 / pageSize)\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pageNumbersArr.push(i)\r\n  }\r\n\r\n  const portionCount = Math.ceil(pagesCount / portionSize)\r\n  let startPortionNumber = Math.ceil(currentPage / portionSize)\r\n  let [portionNumber, setPortionNumber] = useState(startPortionNumber)\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n  let rightPortionNumber = portionNumber * portionSize\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n\r\n      {/* <div className={styles.secondaryBlock}>\r\n        <div>totalCount: {totalCount}</div>\r\n        <div>currentPage: {currentPage}</div>\r\n      </div> */}\r\n\r\n      <div className={styles.paginationBody}>\r\n\r\n        {/* {(portionNumber > 1) && <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>} */}\r\n\r\n        <button\r\n          className={cn(styles.prevBtn, styles.btn, (portionNumber === 1) ? styles.prevBtn_disabled : styles.prevBtn_normal)}\r\n          onClick={() => { setPortionNumber(portionNumber - 1) }}\r\n          disabled={portionNumber === 1}\r\n        >\r\n          PREV\r\n        </button>\r\n\r\n        {pageNumbersArr\r\n          .filter((page) => {\r\n            return (page >= leftPortionPageNumber) && (page <= rightPortionNumber)\r\n          })\r\n          .map((page) => {\r\n            return (\r\n              <span\r\n                key={page}\r\n                className={currentPage === page ? styles.activePage : styles.pages}\r\n                onClick={(e) => { (currentPage !== page) && onPageNumberClick(page) }}\r\n              >\r\n                {page}\r\n              </span>\r\n            )\r\n          })}\r\n\r\n        {/* {(portionNumber < portionCount) && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>} */}\r\n\r\n        <button\r\n          className={cn(styles.nextBtn, styles.btn, (portionNumber === portionCount) ? styles.nextBtn_disabled : styles.nextBtn_normal)}\r\n\r\n          onClick={() => { setPortionNumber(portionNumber + 1) }}\r\n          disabled={portionNumber === portionCount}\r\n        >\r\n          NEXT\r\n        </button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default React.memo(Pagination)","import React from \"react\"\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { UsersFilterType } from '../../../redux/users-reducer'\r\n\r\nimport styles from './UsersSearchForm.module.css'\r\n\r\n// Todo: add ResetFilter Button\r\n\r\ntype PropsType = {\r\n  usersFilter: UsersFilterType\r\n  onChangeUsersFilter: (usersFilter: UsersFilterType) => void\r\n}\r\n\r\nconst UsersSearchForm: React.FC<PropsType> = ({ usersFilter, onChangeUsersFilter }) => {\r\n  type FormValuesType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n  }\r\n\r\n  const initialFormValues: FormValuesType = {\r\n    term: usersFilter.term,\r\n    friend: usersFilter.friend === null ? 'null' : usersFilter.friend === true ? 'true' : 'false'\r\n  }\r\n\r\n  const formValidate = (values: FormValuesType) => {\r\n    const errors = {}\r\n    return errors\r\n  }\r\n\r\n  const onFormSubmit = (values: FormValuesType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n    const filter: UsersFilterType = {\r\n      term: values.term,\r\n      friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n    }\r\n    onChangeUsersFilter(filter)\r\n    setSubmitting(false)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={initialFormValues}\r\n        validate={formValidate}\r\n        onSubmit={onFormSubmit}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form className={styles.form}>\r\n            <Field type=\"text\" name=\"term\" className={styles.input} />\r\n            <ErrorMessage name=\"term\" component=\"div\" className={styles.error}/>\r\n            <Field as=\"select\" name=\"friend\" className={styles.select} >\r\n              <option value=\"null\" className={styles.option}>All users</option>\r\n              <option value=\"true\" className={styles.option}>Only Followed</option>\r\n              <option value=\"false\" className={styles.option}>Only UnFollowed</option>\r\n            </Field>\r\n            <button type=\"submit\" disabled={isSubmitting} className={styles.btn}>\r\n              Find\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(UsersSearchForm)","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\n\r\nimport {\r\n  getCurrentPage, getIsFetching, getIsFollowingInProgress,\r\n  getTotalCount, getUsers, getUsersFilter, getUsersOnPageCount\r\n} from '../../redux/users-selectors'\r\n\r\nimport { actionCreators, requestUsersThunk, UsersFilterType } from '../../redux/users-reducer'\r\n\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport User from './User/User'\r\nimport styles from './Users.module.css'\r\nimport Pagination from '../common/Pagination/Pagination'\r\nimport UsersSearchForm from './UsersSearchForm/UsersSearchForm'\r\n\r\nconst UsersPage: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n\r\n  const usersList = useSelector(getUsers)\r\n  const totalCount = useSelector(getTotalCount)\r\n  const usersOnPageCount = useSelector(getUsersOnPageCount)\r\n  const currentPage = useSelector(getCurrentPage)\r\n  const isFetching = useSelector(getIsFetching)\r\n  const isFollowingInProgress = useSelector(getIsFollowingInProgress)\r\n  const usersFilter = useSelector(getUsersFilter)\r\n\r\n  const setUsersFilter = (usersFilter: UsersFilterType) => dispatch(actionCreators.setUsersFilterAC(usersFilter))\r\n  const followToggle = (userId: number | null) => dispatch(actionCreators.followToggleAC(userId))\r\n  const setCurrentPage = (currentPage: number) => dispatch(actionCreators.setCurrentPageAC(currentPage))\r\n  const isFollowingToggle = (followingUserId: number | null) => dispatch(actionCreators.isFollowingToggleAC(followingUserId))\r\n  const requestUsers = (currentPage: number, usersOnPageCount: number, usersFilter: UsersFilterType) => dispatch(requestUsersThunk(currentPage, usersOnPageCount, usersFilter))\r\n\r\n  //function is use for selecting current page number in Pagination.tsx\r\n  const onPageNumberClick = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber)\r\n    requestUsers(pageNumber, usersOnPageCount, usersFilter)\r\n  }\r\n  const onChangeUsersFilter = (usersFilter: UsersFilterType) => {\r\n    setCurrentPage(1)\r\n    setUsersFilter(usersFilter)\r\n    requestUsers(1, usersOnPageCount, usersFilter)\r\n  }\r\n\r\n  const usersListItems = usersList.map(user => <User\r\n    key={user.id}\r\n    userInfo={user}\r\n    followToggle={followToggle}\r\n    isFollowingInProgress={isFollowingInProgress}\r\n    isFollowingToggle={isFollowingToggle}\r\n  />)\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search)\r\n\r\n    let actualPage = currentPage\r\n    let actualFilter = { ...usersFilter }\r\n\r\n    if (queryParams.has('page')) { actualPage = Number(queryParams.get('page')) }\r\n    if (queryParams.has('term')) { actualFilter.term = queryParams.get('term') as string }\r\n    if (queryParams.has('friend')) {\r\n      switch (queryParams.get('friend')) {\r\n        case 'true':\r\n          actualFilter.friend = true\r\n          break\r\n        case 'false':\r\n          actualFilter.friend = false\r\n          break\r\n        default:\r\n          actualFilter.friend = null\r\n      }\r\n    }\r\n\r\n    setCurrentPage(actualPage)\r\n    setUsersFilter(actualFilter)\r\n    requestUsers(actualPage, usersOnPageCount, actualFilter)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let queryParams = new URLSearchParams()\r\n    if (!!usersFilter.term) { queryParams.set('term', usersFilter.term) }\r\n    if (usersFilter.friend !== null) { queryParams.set('friend', String(usersFilter.friend)) }\r\n    if (currentPage !== 1) { queryParams.set('page', String(currentPage)) }\r\n\r\n    navigate({\r\n      pathname: '/users',\r\n      search: '?' + queryParams.toString()\r\n    })\r\n    // eslint-disable-next-line\r\n  }, [usersFilter, currentPage])\r\n\r\n  return (\r\n    <>\r\n      {isFetching\r\n        ? <Preloader />\r\n        :\r\n        <div className={styles.wrapper}>\r\n\r\n          <div className={styles.form}>\r\n            <UsersSearchForm\r\n              usersFilter={usersFilter}\r\n              onChangeUsersFilter={onChangeUsersFilter}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.pagination}>\r\n            <Pagination totalCount={totalCount}\r\n              pageSize={usersOnPageCount}\r\n              currentPage={currentPage}\r\n              onPageNumberClick={onPageNumberClick}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.usersList}>\r\n            {usersListItems}\r\n          </div>\r\n        </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(UsersPage)\r\n"],"sourceRoot":""}